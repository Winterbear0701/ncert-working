# Generated by Django 4.2.11 on 2025-10-18 14:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0004_chatcache_alter_chathistory_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_number', models.IntegerField()),
                ('question_text', models.TextField()),
                ('option_a', models.CharField(max_length=500)),
                ('option_b', models.CharField(max_length=500)),
                ('option_c', models.CharField(max_length=500)),
                ('option_d', models.CharField(max_length=500)),
                ('correct_answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('explanation', models.TextField(help_text='Why this answer is correct')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['question', 'variant_number'],
            },
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
                ('is_correct', models.BooleanField(default=False)),
                ('time_taken_seconds', models.IntegerField(default=0)),
                ('verification_status', models.CharField(default='pending', max_length=50)),
                ('ai_explanation', models.TextField(blank=True, null=True)),
                ('rag_confidence', models.FloatField(blank=True, null=True)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['attempt', 'question__question_number'],
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.IntegerField()),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('submitted', 'Submitted'), ('verified', 'Verified')], default='in_progress', max_length=20)),
                ('current_question_number', models.IntegerField(default=1)),
                ('total_questions', models.IntegerField(default=10)),
                ('correct_answers', models.IntegerField(default=0)),
                ('score_percentage', models.IntegerField(default=0)),
                ('is_passed', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('total_time_seconds', models.IntegerField(default=0)),
                ('topic_performance', models.JSONField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizChapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('class_number', models.CharField(max_length=10)),
                ('subject', models.CharField(max_length=100)),
                ('chapter_number', models.IntegerField()),
                ('chapter_name', models.CharField(max_length=255)),
                ('chapter_order', models.IntegerField(help_text='Sequential order for unlocking')),
                ('is_active', models.BooleanField(default=True)),
                ('total_questions', models.IntegerField(default=10)),
                ('passing_percentage', models.IntegerField(default=70)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['class_number', 'subject', 'chapter_order'],
            },
        ),
        migrations.CreateModel(
            name='StudentChapterProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_unlocked', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('best_score', models.IntegerField(default=0)),
                ('total_attempts', models.IntegerField(default=0)),
                ('last_attempt_date', models.DateTimeField(blank=True, null=True)),
                ('unlocked_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.quizchapter')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['student', 'chapter__chapter_order'],
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField()),
                ('topic', models.CharField(max_length=255)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('rag_context', models.TextField(help_text='ChromaDB content used to generate this question')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='students.quizchapter')),
            ],
            options={
                'ordering': ['chapter', 'question_number'],
            },
        ),
        migrations.AddIndex(
            model_name='quizchapter',
            index=models.Index(fields=['chapter_id'], name='students_qu_chapter_fd5bca_idx'),
        ),
        migrations.AddIndex(
            model_name='quizchapter',
            index=models.Index(fields=['class_number', 'subject', 'chapter_order'], name='students_qu_class_n_1ebbe5_idx'),
        ),
        migrations.AddField(
            model_name='quizattempt',
            name='chapter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.quizchapter'),
        ),
        migrations.AddField(
            model_name='quizattempt',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='quizanswer',
            name='attempt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='students.quizattempt'),
        ),
        migrations.AddField(
            model_name='quizanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.quizquestion'),
        ),
        migrations.AddField(
            model_name='quizanswer',
            name='variant_used',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.questionvariant'),
        ),
        migrations.AddField(
            model_name='questionvariant',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='students.quizquestion'),
        ),
        migrations.AlterUniqueTogether(
            name='studentchapterprogress',
            unique_together={('student', 'chapter')},
        ),
        migrations.AlterUniqueTogether(
            name='quizquestion',
            unique_together={('chapter', 'question_number')},
        ),
        migrations.AddIndex(
            model_name='quizattempt',
            index=models.Index(fields=['student', 'chapter', '-started_at'], name='students_qu_student_2456a5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='quizanswer',
            unique_together={('attempt', 'question')},
        ),
        migrations.AlterUniqueTogether(
            name='questionvariant',
            unique_together={('question', 'variant_number')},
        ),
    ]
